name: "Build and Test Client SDK"
on:
  push:
    branches:
      - main
      - FeatureIntegration
      - FeatureIntegration/**
    paths-ignore:
      - README.md
      - LICENSE

  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - main
      - FeatureIntegration
      - FeatureIntegration/**

jobs:

  build_and_test_windows:
    name: BuildAndTest-${{matrix.os}}-${{matrix.dotnet-version}}-${{build-config}}
    runs-on: ${{matrix.os}}

    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
        dotnet-version:
          - '3.1.x'
          - '6.0.x'
          - '4.6.2'
        build-config:
          - 'Debug'
          - 'Release'
        include:
          - dotnet-version: '3.1.x'
            framework: netcoreapp3.1
          - dotnet-version: '6.0.x'
            framework: net6.0
          - dotnet-version: '4.6.2'
            framework: net462

    steps:
      - name: Clone this repo (sdk-dotnet)
        uses: actions/checkout@v3
        with:
          path: sdk-dotnet

      - name: "Clone the 'temporalio/api' repo"
        uses: actions/checkout@v3
        with:
          repository: temporalio/api
          path: api

      - name: "Clone the 'macrogreg/temporal-dotnet-buildtools' repo"
        uses: actions/checkout@v3
        with:
          repository: macrogreg/temporal-dotnet-buildtools
          path: macrogreg/temporal-dotnet-buildtools

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{matrix.dotnet-version}}

      - name: Build Solution
        run: dotnet build -c ${{build-config}} sdk-dotnet/Src/Temporal.Sdk.sln

      - name: ZIP and Upload Binaries
        run: 7z a -tzip -mx9 TemporalSDK.Bin.${{matrix.os}}.${{matrix.dotnet-version}}.${{build-config}}.zip _build/bin/Debug-AnyCPU/SDK/
        uses: actions/upload-artifact@v3
        with:
          name: TemporalSDK_Bin_${{matrix.os}}_${{matrix.dotnet-version}}_${{build-config}}
          path: TemporalSDK_Bin_${{matrix.os}}_${{matrix.dotnet-version}}_${{build-config}}.zip

      - name: Run Unit Tests
        run: dotnet test -f ${{ matrix.framework }} -c ${{build-config}} -l "trx;LogFileName=UnitTest-${{matrix.os}}-${{matrix.dotnet-version}}-${{build-config}}.trx" --results-directory _testresults/Unit sdk-dotnet/Src/Test/Temporal.Sdk.Test.Unit.Automation.sln

      - name: Upload Unit Test Results
        if: ${{ always() }}  # upload test results even if tests failed
        uses: actions/upload-artifact@v3
        with:
          name: TemporalSDK_TestResults_Unit_${{matrix.os}}_${{matrix.dotnet-version}}_${{build-config}}
          path: _testresults/Unit
      
      - name: Run Integration Tests
        if: ${{ always() }}  # run Int tests even if Unit tests failed
        run: dotnet test -f ${{ matrix.framework }} -c ${{build-config}} -l "trx;LogFileName=UnitTest-${{matrix.os}}-${{matrix.dotnet-version}}-${{build-config}}.trx" --results-directory _testresults/Int sdk-dotnet/Src/Test/Temporal.Sdk.Test.Int.Automation.sln

      - name: Upload Integration Test Results
        if: ${{ always() }}  # upload test results even if tests failed
        uses: actions/upload-artifact@v3
        with:
          name: TemporalSDK_TestResults_Int_${{matrix.os}}_${{matrix.dotnet-version}}_${{build-config}}
          path: _testresults/Int